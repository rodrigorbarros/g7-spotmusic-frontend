name: Deploy CGP

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      ms_name:
        required: true
        type: string
      db_instance:
        required: true
        type: string
      db_name:
        required: true
        type: string
      run_secrets:
        required: false
        type: string
      run_envs:
        required: false
        type: string
      region:
        required: false
        type: string
        default: us-central1
      vpc_connector:
        required: false
        type: string
        default: serverless-vpc-connector
    secrets:
      GCP_CREDENTIALS:
        required: true

jobs: 

  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      MS_NAME: ${{ inputs.ms_name }}
    outputs:
      gcp_image_name: ${{ steps.gcp_image.outputs.name }}
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false

    - uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    #- name: Typecheck 
    #  run: yarn typecheck
    
    #- name: Test 
    #  run: yarn test

    - name: Build 
      run: yarn build

    - name: Docker Login
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      run: | 
        echo '${{ secrets.GCP_CREDENTIALS }}' > key.json
        cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/
    - name: Build Image & Push
      env: 
        ARTIFACT_REGISTRY_REPO: ${{ secrets.ARTIFACT_REGISTRY_REPO }}
      run: | 
        docker build -t ${{ secrets.ARTIFACT_REGISTRY_REPO }}/myapp:latest .
        docker push ${{ secrets.ARTIFACT_REGISTRY_REPO }}/myapp:latest
 

  deploy-http:
    name: Deploy Gcloud HTTP
    runs-on: ubuntu-latest
    needs: build
    env:
      IMAGE: "${gcp_image_name}"
      MS_NAME: "${gcp_image_name}"
      REGION: us-central1
      DB_NAME: ${{ secrets.CLOUD_SQL_DATABASE_NAME }}
      ENTRY_POINT: http
      RUN_SECRETS: ${{ inputs.run_secrets }}
      RUN_ENVS: ${{ inputs.run_envs }}
      VPC_CONNECTOR: ${{ secrets.vpc_connector }}

    steps:
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Deploy http server
      run: |
        gcloud run deploy ${{ secrets.ARTIFACT_REGISTRY_REPO }}/myapp:latest \
          --region $REGION \
          --platform managed \